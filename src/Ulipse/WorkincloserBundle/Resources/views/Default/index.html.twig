{% extends "UlipseWorkincloserBundle::layout.html.twig" %}

{% block content %}
    <h1>Your Addresses : </h1>
    {% set types = {'workat' : 'Work At', 'liveat' : 'Live At'} %}
        <form action="{{path('index')}}" method="post" id="geocoding_form" {{ form_enctype(form) }}>
            {% for type, title in types %}
                <div class="input">
                    {{ form_widget(form.addresses[type].text, { 'attr': {'class':'address_text_'~type, 'placeholder':'Your Address...','autocomplete' : 'off'}}) }}
                    {{ form_widget(form.addresses[type].latitude, { 'attr': {'class':'lat', 'placeholder':'Latitude...', 'autocomplete' : 'off', 'hidden':'hidden' }}) }}
                    {{ form_widget(form.addresses[type].longitude, { 'attr': {'class':'lng', 'placeholder':'Longitude...', 'autocomplete' : 'off', 'hidden':'hidden' }}) }}
                </div>
            {% endfor %}
            {{ form_rest(form) }}
            <input type="submit" value="save" id="save" class="btn btn-success">
        </form>
        {% render "UlipseWorkincloserBundle:Default:corresponding" %}
{% endblock %}

{% block javascripts %}
    <script type="text/javascript" src="{{ asset('bundles/ulipseworkincloser/js/jquery.js')  }}"></script>
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false&libraries=places&language=en-AU"></script>
    <script>
        $(document).ready(function(){
            var autocomplete_workat = new google.maps.places.Autocomplete(document.getElementById('ulipse_workincloserbundle_addressestype_addresses_workat_text'));
            var autocomplete_liveat = new google.maps.places.Autocomplete(document.getElementById('ulipse_workincloserbundle_addressestype_addresses_liveat_text'));

            google.maps.event.addListener(autocomplete_workat, 'place_changed', function() {
                var place = autocomplete_workat.getPlace();
                $('#ulipse_workincloserbundle_addressestype_addresses_workat_latitude').val(place.geometry.location.lat());
                $('#ulipse_workincloserbundle_addressestype_addresses_workat_longitude').val(place.geometry.location.lng());
            });

            google.maps.event.addListener(autocomplete_liveat, 'place_changed', function() {
                var place = autocomplete_liveat.getPlace();
                $('#ulipse_workincloserbundle_addressestype_addresses_liveat_latitude').val(place.geometry.location.lat());
                $('#ulipse_workincloserbundle_addressestype_addresses_liveat_longitude').val(place.geometry.location.lng());
            });

            $('#geocoding_form').submit(function(e) {
                e.preventDefault();
                if (('' != $('.address_text_liveat').val()) && ('' != $('.address_text_workat').val())) {
                    var form_data = $('form').serialize();
                    $.ajax({
                        url:"{{ path('index') }}",
                        dataType: "json",
                        type: "post",
                        data: form_data,
                        success : function (data) {
                            if(data.success){
                                console.log("ok :" + data.message);
                            } else {
                                console.log("Not Ok: " + data.message);
                            }
                        }
                    });
                } else {
                    console.log('try again ;-)');
                }
            });
        });
    </script>
{% endblock %}
